name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  QT_VERSION: 5.15.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Invalidate C++ code
      uses: DoozyX/clang-format-lint-action@v0.8
      with:
        source: 'src tests'
        exclude: './thirdparty'
        extensions: 'h,cpp'
        clangFormatVersion: 10

    - name: Install Qt
      run: |
        sudo apt-get update
        sudo apt-get install unzip wget build-essential mesa-common-dev libglu1-mesa-dev -y
        python -m pip install --upgrade pip
        sudo pip3 install aqtinstall
        export QT_INSTALL_DIR=$HOME/Qt
        mkdir $QT_INSTALL_DIR
        sudo aqt install --outputdir $QT_INSTALL_DIR $QT_VERSION linux desktop -m qtcharts

    - name: Invalidate QML code
      run: |
        SUCCESS=0
        export QTDIR=$HOME/Qt/$QT_VERSION/gcc_64
        echo -e "\e[92mLint QML..."
        for qml_file in $(find src tests -type f -name "*.qml")
        do
          $QTDIR/bin/qmllint "$qml_file"
          if [ $(echo $?) -ne 0 ]
          then
            echo "qmllint failed for $qml_file"
            SUCCESS=1
          fi
        done
        if [ $SUCCESS -eq 1 ]
        then
          exit $SUCCESS
        fi
        echo -e "\e[92mCheck QML formatting..."
        for qml_file in $(find src tests -type f -name "*.qml")
        do
          diff "$qml_file" <($QTDIR/bin/qmlformat "$qml_file")
          if [ $(echo $?) -ne 0 ]
          then
            echo "qmlformat failed for $qml_file"
            SUCCESS=1
          fi
        done
        if [ $SUCCESS -eq 1 ]
        then
          exit $SUCCESS
        fi

    - name: Build app and run tests
      run: |
        export QTDIR=$HOME/Qt/$QT_VERSION/gcc_64
        $QTDIR/bin/qmake CONFIG+=release
        make -j`nproc`
        export RRCORE=$PWD/src/rrcore
        export LD_LIBRARY_PATH=$QTDIR/lib
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$RRCORE
        export QT_QPA_PLATFORM=offscreen
        make check
        
